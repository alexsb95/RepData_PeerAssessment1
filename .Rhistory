Coal_Emmission <- aggregate(Emissions ~ year ,coal_data, FUN = sum)
warnings()
plot(Coal_Emmission$year, Coal_Emmission$Emissions, type = "l")
sum(NEI$year == 2000)
sum(NEI$year == 2004)
sum(Coal_Emmission$year == 2004)
sum(Coal_Emmission$year == 2000)
qplot(year, Emissions, data = Coal_Emmission)
plot(Coal_Emmission$year, Coal_Emmission$Emissions, type = "l")
qplot(year, Emissions, data = Coal_Emmission, geom = c("point","smooth"), method = "lm")
plot(Coal_Emmission$year, Coal_Emmission$Emissions, type = "l", xlab = "Year", ylab = "Total emissions",
main = "Emissions from coal in the United States ")
NEI$type[1:20]
NEI$type[1:500]
NEI$fips == "24510" && NEI$type == "ON-ROAD"
NEI$fips == "24510" & NEI$type == "ON-ROAD"
## Extract the baltimore data only
Baltimore_Data <- subset(NEI, NEI$fips == "24510" & NEI$type == "ON-ROAD")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year ,Baltimore_Data, FUN = sum)
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Balt_Emmission, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
## Extract the baltimore data and the motor vehicle sources
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
## Get the total emissions per year
Cities_Emmission <- aggregate(Emissions ~ year + fips,Baltimore_Data, FUN = sum)
qplot(year, Emissions, data = Cities_Emmission, color = fips, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
Cities_Data$fips == "06037"
sum(Cities_Data$fips == "06037")
head(Cities_Emmission)
Cities_Emmission == 06037
class()
class( sources
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips)
class(NEI$fips)
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
Balt_Emmission
t <- as.factor(Cities_Data$fips)
t
Cities_Data$fips <- as.factor(Cities_Data$fips)
Cities_Emmission <- aggregate(Emissions ~ year + fips,Baltimore_Data, FUN = sum)
Cities_Emmission
Cities_Emmission <- aggregate(Emissions ~ fips + year,Baltimore_Data, FUN = sum)
Cities_Emmission
Cities_Emmission <- aggregate(Emissions ~ fips ,Baltimore_Data, FUN = sum)
Cities_Emmission
levels(Cities_Data$fips)
Cities_Data$fips[231]
table( Cities_Data$fips)
Cities_Emmission <- aggregate(Emissions ~ year + fips ,Cities_Data, FUN = sum)
qplot(year, Emissions, data = Cities_Emmission, color = fips, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
Cities_Emmission
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
Cities_Data$fips <- as.factor(Cities_Data$fips)
## Get the total emissions per year
Cities_Emmission <- aggregate(Emissions ~ year + fips ,Cities_Data, FUN = sum)
Cities_Emmission
Cities_Data[231,]
source("plot3.R")
plot3()
plot3()
NEI <- readRDS("summarySCC_PM25.rds")
## Extract the baltimore data only
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
png(file = "plot3.png")
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
dev.off()
source("plot3.R")
plot3
plot3()
png(file = "plot3.png")
dev.off()
png(file = "plot3.png")
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
dev.off()
source("plot4.R")
plot4()
source("plot4.R")
plot4()
source("plot4.R")
plot4()
source("plot5.R")
plot5()
source("plot6.R")
plot6()
ggplot(Cities_Emmission, aes(year, Emissions)) + geom_point() + geom_smooth()
Cities_Data <- subset(NEI, (NEI$fips == "24510" |  NEI$fips == "06037") & NEI$type == "ON-ROAD")
Cities_Data$fips <- as.factor(Cities_Data$fips)
## Get the total emissions per year
Cities_Emmission <- aggregate(Emissions ~ year + fips ,Cities_Data, FUN = sum)
ggplot(Cities_Emmission, aes(year, Emissions)) + geom_point() + geom_smooth()
Cities_Emmission
ggplot(Cities_Emmission, aes(year, Emissions)) + geom_point())
ggplot(Cities_Emmission, aes(year, Emissions)) + geom_point()
ggplot(Cities_Emmission, aes(year, Emissions)) + geom_point() + geom_smooth(method = "lm")
qplot(year, Emissions, data = Cities_Emmission, color = fips, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(fips ~ .) + geom_point() + geom_smooth(method = "lm")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
class(Cities_Emmission$fips)
levels(Cities_Emmission$fips)
levels(Cities_Emmission$fips) <- c("Los Angeles","Baltimore City")
Cities_Emmission$fips
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
+ labs(x = "Year", y = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
+ labs(x = "Year", y = "Total emissions", title = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
+ labs(x = "Year", y = "Total emissions") + labs(title = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
+ labs(x = "Year", y = "Total emissions")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm") + labs(x = "Year", y = "Total emissions") + labs(title = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
gplot <- ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
gplot + labs(x = "Year", y = "Total emissions") + labs(title = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point(aes(color = "green")) + geom_smooth(method = "lm")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point(aes(color = "Green")) + geom_smooth(method = "lm")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point(aes(color = "#D55E00")) + geom_smooth(method = "lm")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point(aes(color = "#D55E00")) + geom_smooth(method = "lm", color = "009E73")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point(aes(color = "#D55E00")) + geom_smooth(method = "lm", color = "#009E73")
source("plot6.R")
plot6()
png(file = "plot6.png")
gplot <- ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point() + geom_smooth(method = "lm")
gplot + labs(x = "Year", y = "Total emissions") + labs(title = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
dev.off()
png(file = "plot6.png")
ggplot(Cities_Emmission, aes(year, Emissions)) + facet_grid(. ~ fips) + geom_point(aes(color = "#D55E00")) + geom_smooth(method = "lm", color = "#009E73")
gplot + labs(x = "Year", y = "Total emissions") + labs(title = "Emissions from motor vehicle sources in the Baltimore City and Los Angeles")
dev.off()
source("plot6.R")
plot6()
## Extract the baltimore data and the motor vehicle sources
Baltimore_Data <- subset(NEI, NEI$fips == "24510" & NEI$type == "ON-ROAD")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year ,Baltimore_Data, FUN = sum)
png(file = "plot5.png")
qplot(year, Emissions, data = Balt_Emmission, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
dev.off()
qplot(year, Emissions, data = Balt_Emmission, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Emissions from motor vehicle sources in the Baltimore City")
source("plot5.R")
plot5
plot5()
gplot <- ggplot(Balt_Emmission, aes(year, Emissions)) + geom_point(aes(color = type)) + geom_smooth(method = "lm", color = "#009E73")
gplot <- gplot + labs(x = "Year", y = "Total emissions") + labs(title = "Total emissions based on the source type in the Baltimore City")
print(gplot)
Baltimore_Data <- subset(NEI, NEI$fips == "24510")
## Get the total emissions per year
Balt_Emmission <- aggregate(Emissions ~ year + type ,Baltimore_Data, FUN = sum)
gplot <- ggplot(Balt_Emmission, aes(year, Emissions)) + geom_point(aes(color = type)) + geom_smooth(method = "lm", color = "#009E73")
gplot <- gplot + labs(x = "Year", y = "Total emissions") + labs(title = "Total emissions based on the source type in the Baltimore City")
print(gplot)
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point","smooth"), method = "lm",
xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
source("plot5.R")
plot5()
source("plot6.R")
plot6()
source("plot3.R")
source("plot3.R")
plot3()
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point")) +   geom_smooth(method="lm", se=FALSE) + labs( xlab = "Year", ylab = "Total emissions", main = "Total emissions based on the source type in the Baltimore City")
qplot(year, Emissions, data = Balt_Emmission , color = type, geom = c("point")) +   geom_smooth(method="lm", se=FALSE) + labs( xlab = "Year", ylab = "Total emissions", title = "Total emissions based on the source type in the Baltimore City")
source("plot3.R")
plot3()
source("plot6.R")
plot6()
labels(Cities_Emmission$fips) <- c("Los Angeles", "Baltimore City")
labels(Cities_Emmission$fips)
Cities_Emmission$fips
source("plot6.R")
plot6()
setwd("C:/Users/Alex/Documents/GitHub/RepData_PeerAssessment1")
activity <-  read.csv("activity.csv")
Steps_date <- aggregate(steps ~ date , data = activity, FUN = sum)
Steps_date
with(Steps_date, hist(steps, breaks = date, col = "Red"))
with(Steps_date, hist(steps, col = "Red"))
with(Steps_date, hist(steps ~ date, col = "Red"))
with(Steps_date, hist(steps, col = "Red"))
with(activity, hist(steps, breaks = date, col = "Red"))
with(activity, hist(steps, col = "Red"))
with(activity, hist(steps, col = "Red", rm.na=T))
?hist
!is.na(activity$date)
activity$date
is.na(activity$steps)
clean_activity <- activity[!is.na(activity$steps)]
clean_activity <- activity[!is.na(activity$steps),]
clean_activity[1:5,]
clean_activity[1:25,]
Steps_date <- aggregate(steps ~ date , data = clean_activity, FUN = sum)
Steps_date
with(Steps_date, hist(steps, breaks = date, col = "Red"))
with(Steps_date,  plot(steps, date, type = "l"))
as.Date(activity$date[1],"%d/%m/%Y")
as.Date(clean_activity$date,"%d/%m/%Y")
as.Date(clean_activity$date[1],"%d/%m/%Y")
clean_activity$date[1]
as.Date(clean_activity$date[1],"%Y-%m-%d")
clean_activity$date <- as.Date(clean_activity$date,"%Y-%m-%d")
clean_activity$date
class(clean_activity$date)
with(Steps_date,  plot(steps, date, type = "l"))
Steps_date <- aggregate(steps ~ date , data = clean_activity, FUN = sum)
with(Steps_date,  plot(steps, date, type = "l"))
clean_activity$date <- as.Date(Steps_date$date,"%Y-%m-%d")
Steps_date <- aggregate(steps ~ date , data = clean_activity, FUN = sum)
with(Steps_date,  plot(date, steps, type = "l"))
with(activity, hist(steps, col = "Red"))
with(clean_activity, hist(steps, col = "Red"))
?aggregate
?median
Steps_mean <- aggregate(steps ~ date , data = clean_activity, FUN = mean)
Steps_median <- aggregate(steps ~ date , data = clean_activity, FUN = median)
step_day <- merge(Steps_mean, Steps_median, by = "date")
step_day
Steps_median <- aggregate(steps ~ date , data = clean_activity, FUN = median)
Steps_median
Steps_mean
Steps_median <- aggregate(steps ~ date , data = clean_activity, FUN = median)
Steps_median
clean_activity
q <- c(1,2,3,4,56,7,8,9)
median(q)
q <- aggregate(steps ~ date , data = clean_activity)
?group_by
data.frame
?data.frame
?ddply
with(Steps_date,  plot(date, interval, type = "l"))
with(clean_activity,  plot(date, interval, type = "l"))
activity <-  read.csv("activity.csv")
clean_activity <- activity[!is.na(activity$steps),]
Steps_interval <- aggregate(steps ~ interval , data = clean_activity, FUN = mean)
with(Steps_interval,  plot(interval, steps, type = "l"))
Steps_interval
Steps_interval[order(steps)]
Steps_interval[order(steps),]
Steps_interval[order(Steps_interval$steps),]
Steps_interval[order(-Steps_interval$steps),]
Steps_interval[order(-Steps_interval$steps),][1:3]
Steps_interval[order(-Steps_interval$steps)[1:3],]
sum(is.na(activity))
dim(Steps_interval)
sum(is.na(activity$steps))
is.na(activity$steps)
count(is.na(activity$steps))
sum(is.na(activity$steps)>0)
sum(is.na(activity$steps]==T)
sum(is.na(activity$steps]=T)
sum(is.na(activity$steps]==T)
is.na(activity$steps]==T
is.na(activity$steps)==T
is.na(activity$steps)["True"]
is.na(activity$steps)[na_steps[na_steps==T]]
na_steps <- is.na(activity$steps)
is.na(activity$steps)[na_steps[na_steps==T]]
sum(na_steps[na_steps==T])
length(na_steps[na_steps==T])
sum(activity$steps, na.rm = T)
sum(na_steps, na.rm = T)
sum(is.na(activity$steps))
dim(activity)
dim(Steps_interval)
2304/288
?is.na
is.na(x,value=T)
is.na(activity$steps,value=T)
which(na_steps)
dim(Steps_interval)
na_index <- which(na_steps)
Steps_interval[288]
Steps_interval[287]
Steps_interval[287,]
Steps_interval[288,]
Steps_interval[289,]
Steps_interval[1,]
for (counter in c(1:8)) {
activity[intial_Index:intial_Index+287] = Steps_interval[1:288]
intial_Index <- intial_Index+287
}
intial_Index <- 1
activity[intial_Index:intial_Index+287,"steps"] = Steps_interval[1:288,"steps"]
activity[intial_Index:intial_Index+287,"steps"]
activity[,"steps"]
activity[intial_Index:intial_Index+287,"steps"]
Steps_interval[1:288,"steps"]
intial_Index <- 1
intial_Index
activity[intial_Index:intial_Index+287,"steps"]
lis <- c(intial_Index:intial_Index+287)
lis
lis <- c(intial_Index:(intial_Index+287))
lis
activity[intial_Index:(intial_Index+287),"steps"]
activity[intial_Index:(intial_Index+287),"steps"] = Steps_interval[1:288,"steps"]
intial_Index <- intial_Index+287
intial_Index
na_index[intial_Index:(intial_Index+287)]
intial_Index <- intial_Index + 1
na_index[intial_Index:(intial_Index+287)]
subs_index <- na_index[intial_Index:(intial_Index+287)]
activity[subs_index,"steps"] = Steps_interval[1:288,"steps"]
activity[subs_index,"steps"]
intial_Index <- intial_Index+288
intial_Index
activity[577,"strps"]
activity[577,"steps"]
activity[578,"steps"]
activity[569,"steps"]
subs_index[577]
lenght(subs_index)
length(subs_index)
na_index <- which(na_steps)
na_index
length(subs_index)
length(na_index)
na_index[577]
activity[8929]
activity[8929,]
activity[8928,]
activity[8930,]
intial_Index <- 1
for (counter in c(1:8)) {
subs_index <- na_index[intial_Index:(intial_Index+287)]
activity[subs_index,"steps"] = Steps_interval[1:288,"steps"]
intial_Index <- intial_Index+288
}
sum(is.na(activity))
activity <-  read.csv("activity.csv")
sum(na_steps)
with(activity, hist(steps, col = "Red"))
with(clean_activity, hist(steps, col = "Red"))
weekdays( activity$date[1])
activity$date <- as.Date(activity$date,"%Y-%m-%d")
weekdays( activity$date[1])
num_cycles <- length(Steps_interval$steps) / na_total
na_total <- sum(na_steps)
num_cycles <- length(Steps_interval$steps) / na_total
num_cycles
num_cycles <- na_total / length(Steps_interval$steps)
num_cycles
?weekdays
head(days)
days <- weekdays(activity$date)
head(days)
head(days, abbreviate == T
days <- weekdays(activity$date, abbreviate = T)
days <- weekdays(activity$date, abbreviate = TRUE)
head(days)
sum(days == "Sun")
sum(days == "Sat")
"sun" %in% days
"Sun" %in% days
"Mon" %in% days
weekends <- c("Sun","Sat")
"Sun" %in% weekends
"Mon" %in% weekends
class(days)
for (day in days) {
if(day %in% weekends){
day = "weekend"
}else{
day = "weekday"
}
}
days
day[1] %in% weekends
for (day in days) {
if(day %in% weekends){
day = "weekend"
}else{
day = "weekday"
}
}
days
day
days[days %in% weekends] <- "weekend"
days[days %in% weekends]
days %in% weekends
sum(days %in% weekends)
days
days[(days %in% weekends)]
(days %in% weekends)
nnn <- (days %in% weekends)
days[nnn]
days[1:5]
head(nnn)
nnn <- (days %in% weekends)
nnn
days[nnn]
days[c(T<F)]
days[c(T,F)]
days[!(days %in% weekends)] <- "weekday"
days
class(day)
as.factor(days)
days == "weekend"
activity <-  read.csv("activity.csv")
intial_Index <- 1
for (counter in c(1:num_cycles)) {
subs_index <- na_index[intial_Index:(intial_Index+287)]    ## Extract the index to replace
activity[subs_index,"steps"] = Steps_interval[1:288,"steps"]
intial_Index <- intial_Index + 288    ## the next bloc to replace
}
days <- weekdays(activity$date, abbreviate = "TRUE")
days <- weekdays(activity$date, abbreviate = "TRUE")
activity$date <- as.Date(activity$date,"%Y-%m-%d")
days <- weekdays(activity$date, abbreviate = "TRUE")
weekends <- c("Sun","Sat")
days[(days %in% weekends)] <- "weekend"
days[!(days %in% weekends && days != "weekend")] <- "weekday"
sum(days == "weekend")
sum(days == "weekday")
days <- weekdays(activity$date, abbreviate = "TRUE")
weekends <- c("Sun","Sat")
days[(days %in% weekends)] <- "weekend"
days[(!(days %in% weekends) && days != "weekend")] <- "weekday"
sum(days == "weekday")
sum(days == "weekday")
sum(days == "weekend")
days <- weekdays(activity$date, abbreviate = "TRUE")
day
days
days[(days %in% weekends)] <- "weekend"
days <- weekdays(activity$date, abbreviate = "TRUE")
days[!(days %in% weekends)] <- "weekday"
days[(days %in% weekends)] <- "weekend"
sum(days == "weekend")
sum(days == "weekday")
activity$weekday <- as.factor(days)
as.factor(days)
Steps_week <- aggregate(steps ~ weekday , data = activity, FUN = mean)
Steps_week
aggregate(steps ~ weekday + invertal , data = activity, FUN = mean)
aggregate(steps +interval ~ weekday , data = activity, FUN = mean)
with(Steps_week,  plot(steps, weekday, type = "l"))
Steps_week <- aggregate(interval ~ weekday + interval , data = activity, FUN = mean)
Steps_week
?aggregate
?table
with(activity, table(interval, weekday))
with(Steps_week,  plot(interval, weekday, type = "l"))
Steps_week <- aggregate(steps ~ weekday + interval, data = activity, FUN = mean)
Steps_week
require(ggplot2)
gplot <- ggplot(Steps_week, aes(interval, steps)) + facet_grid(. ~ weekday)
print(gplot)
head(Steps_week)
with(clean_activity, hist(steps, col = "Red"))
activity <-  read.csv("activity.csv")
activity$date <- as.Date(activity$date,"%Y-%m-%d")
days <- weekdays(activity$date, abbreviate = "TRUE")
weekends <- c("Sun","Sat")
days[!(days %in% weekends)] <- "weekday"
days[(days %in% weekends)] <- "weekend"
activity$weekday <- as.factor(days)
require(ggplot2)
gplot <- ggplot(Steps_week, aes(interval, steps)) + facet_grid(. ~ weekday)
Steps_week <- aggregate(steps ~ weekday + interval, data = activity, FUN = mean)
gplot <- ggplot(Steps_week, aes(interval, steps)) + facet_grid(. ~ weekday)
print(gplot)
gplot <- ggplot(Steps_week, aes(interval, steps)) + facet_grid(. ~ weekday) + geom_point()
print(gplot)
gplot <- ggplot(Steps_week, aes(interval, steps)) + facet_grid(weekday ~ .) + geom_point()
print(gplot)
gplot <- ggplot(Steps_week, aes(interval, steps)) + facet_grid(weekday ~ .) + geom_line()
print(gplot)
Steps_week
clean_activity <- activity[!is.na(activity$steps),]
Steps_median <- aggregate(steps ~ date , data = clean_activity, FUN = median)
Steps_median
?group_by
library(ddply)
library(plyr)
?group_by
?gplot
?ggplot
library(dplyr)
?group_by
test <- group_by(clean_activity, date())
test <- group_by(clean_activity, date
)
test
test <- group_by(clean_activity, date)
test$date[1:50]
test <- group_by(clean_activity, weekday)
test$date[1:50]
activity <-  read.csv("activity.csv")
clean_activity <- activity[!is.na(activity$steps),]
test <- group_by(clean_activity, weekday)
test <- group_by(clean_activity, date)
test
summarise(ste = mean(test$steps))
summarise(test)
summarise(test,median(steps))
summarise(test,mean(steps))
with(clean_activity, hist(steps, col = "Red"))
